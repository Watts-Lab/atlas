services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile.server
    env_file:
      - .env
    environment:
      - PYTHON_ENV=development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

    volumes:
      - ./server:/app/api
    command: >
      sh -c "python3 -m sanic api.app --host 0.0.0.0 --port 8000 --workers 1 --dev"
    
  client:
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - 3000:80
    depends_on:
      - backend
    volumes:
      - ./client/dist:/usr/share/nginx/html
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    command: >
      sh -c "nginx -g 'daemon off;'"

  redis:
    container_name: redis
    image: public.ecr.aws/docker/library/redis:latest
    ports:
      - 6379:6379
    depends_on:
      - backend
      - client
  
  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: Dockerfile.server
    env_file:
      - .env
    environment:
      - PYTHON_ENV=development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=false
    volumes:
      - ./server:/app/api
    command: bash -c "celery -A workers.celery_config.celery worker --loglevel=info"
    depends_on:
      - backend
      - redis

  celery_flower:
    container_name: celery_flower
    build:
      context: .
      dockerfile: Dockerfile.server
    env_file:
      - .env
    environment:
      - PYTHON_ENV=development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=false
    volumes:
      - ./server:/app/api
    command: bash -c "celery -A workers.celery_config.celery flower --port=5555"
    expose:
      - 5555
    ports:
      - 5556:5555
    depends_on:
      - celery_worker

